{"ast":null,"code":"import _possibleConstructorReturn from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _isNativeReflectConstruct from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport _getPrototypeOf from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay) {\n  var scheduler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : async;\n  var absoluteDelay = isDate(delay);\n  var delayFor = absoluteDelay ? +delay - scheduler.now() : Math.abs(delay);\n  return function (source) {\n    return source.lift(new DelayOperator(delayFor, scheduler));\n  };\n}\n\nvar DelayOperator = /*#__PURE__*/function () {\n  function DelayOperator(delay, scheduler) {\n    _classCallCheck(this, DelayOperator);\n\n    this.delay = delay;\n    this.scheduler = scheduler;\n  }\n\n  return _createClass(DelayOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    }\n  }]);\n}();\n\nvar DelaySubscriber = /*#__PURE__*/function (_Subscriber) {\n  function DelaySubscriber(destination, delay, scheduler) {\n    var _this;\n\n    _classCallCheck(this, DelaySubscriber);\n\n    _this = _callSuper(this, DelaySubscriber, [destination]);\n    _this.delay = delay;\n    _this.scheduler = scheduler;\n    _this.queue = [];\n    _this.active = false;\n    _this.errored = false;\n    return _this;\n  }\n\n  _inherits(DelaySubscriber, _Subscriber);\n\n  return _createClass(DelaySubscriber, [{\n    key: \"_schedule\",\n    value: function _schedule(scheduler) {\n      this.active = true;\n      var destination = this.destination;\n      destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n        source: this,\n        destination: this.destination,\n        scheduler: scheduler\n      }));\n    }\n  }, {\n    key: \"scheduleNotification\",\n    value: function scheduleNotification(notification) {\n      if (this.errored === true) {\n        return;\n      }\n\n      var scheduler = this.scheduler;\n      var message = new DelayMessage(scheduler.now() + this.delay, notification);\n      this.queue.push(message);\n\n      if (this.active === false) {\n        this._schedule(scheduler);\n      }\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      this.scheduleNotification(Notification.createNext(value));\n    }\n  }, {\n    key: \"_error\",\n    value: function _error(err) {\n      this.errored = true;\n      this.queue = [];\n      this.destination.error(err);\n      this.unsubscribe();\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.scheduleNotification(Notification.createComplete());\n      this.unsubscribe();\n    }\n  }], [{\n    key: \"dispatch\",\n    value: function dispatch(state) {\n      var source = state.source;\n      var queue = source.queue;\n      var scheduler = state.scheduler;\n      var destination = state.destination;\n\n      while (queue.length > 0 && queue[0].time - scheduler.now() <= 0) {\n        queue.shift().notification.observe(destination);\n      }\n\n      if (queue.length > 0) {\n        var _delay = Math.max(0, queue[0].time - scheduler.now());\n\n        this.schedule(state, _delay);\n      } else {\n        this.unsubscribe();\n        source.active = false;\n      }\n    }\n  }]);\n}(Subscriber);\n\nvar DelayMessage = /*#__PURE__*/_createClass(function DelayMessage(time, notification) {\n  _classCallCheck(this, DelayMessage);\n\n  this.time = time;\n  this.notification = notification;\n}); //# sourceMappingURL=delay.js.map","map":{"version":3,"sources":["C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/rxjs/_esm2015/internal/operators/delay.js"],"names":["async","isDate","Subscriber","Notification","delay","scheduler","absoluteDelay","delayFor","now","Math","abs","source","lift","DelayOperator","call","subscriber","subscribe","DelaySubscriber","destination","queue","active","errored","_schedule","add","schedule","dispatch","scheduleNotification","notification","message","DelayMessage","push","_next","value","createNext","_error","err","error","unsubscribe","_complete","createComplete","state","length","time","shift","observe","max"],"mappings":"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","sourcesContent":["import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler = async) {\n    const absoluteDelay = isDate(delay);\n    const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return (source) => source.lift(new DelayOperator(delayFor, scheduler));\n}\nclass DelayOperator {\n    constructor(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    }\n}\nclass DelaySubscriber extends Subscriber {\n    constructor(destination, delay, scheduler) {\n        super(destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    static dispatch(state) {\n        const source = state.source;\n        const queue = source.queue;\n        const scheduler = state.scheduler;\n        const destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            const delay = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    }\n    _schedule(scheduler) {\n        this.active = true;\n        const destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    }\n    scheduleNotification(notification) {\n        if (this.errored === true) {\n            return;\n        }\n        const scheduler = this.scheduler;\n        const message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    }\n    _next(value) {\n        this.scheduleNotification(Notification.createNext(value));\n    }\n    _error(err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nclass DelayMessage {\n    constructor(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n}\n//# sourceMappingURL=delay.js.map"]},"metadata":{},"sourceType":"module"}