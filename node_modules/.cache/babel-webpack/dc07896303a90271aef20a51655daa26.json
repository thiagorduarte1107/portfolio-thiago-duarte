{"ast":null,"code":"'use strict';\n\nvar $TypeError = require('es-errors/type');\n\nvar inspect = require('object-inspect');\n\nvar getSideChannelList = require('side-channel-list');\n\nvar getSideChannelMap = require('side-channel-map');\n\nvar getSideChannelWeakMap = require('side-channel-weakmap');\n\nvar makeChannel = getSideChannelWeakMap || getSideChannelMap || getSideChannelList;\n/** @type {import('.')} */\n\nmodule.exports = function getSideChannel() {\n  /** @typedef {ReturnType<typeof getSideChannel>} Channel */\n\n  /** @type {Channel | undefined} */\n  var $channelData;\n  /** @type {Channel} */\n\n  var channel = {\n    assert: function assert(key) {\n      if (!channel.has(key)) {\n        throw new $TypeError('Side channel does not contain ' + inspect(key));\n      }\n    },\n    'delete': function _delete(key) {\n      return !!$channelData && $channelData['delete'](key);\n    },\n    get: function get(key) {\n      return $channelData && $channelData.get(key);\n    },\n    has: function has(key) {\n      return !!$channelData && $channelData.has(key);\n    },\n    set: function set(key, value) {\n      if (!$channelData) {\n        $channelData = makeChannel();\n      }\n\n      $channelData.set(key, value);\n    }\n  }; // @ts-expect-error TODO: figure out why this is erroring\n\n  return channel;\n};","map":{"version":3,"sources":["C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/side-channel/index.js"],"names":["$TypeError","require","inspect","getSideChannelList","getSideChannelMap","getSideChannelWeakMap","makeChannel","module","exports","getSideChannel","$channelData","channel","assert","key","has","get","set","value"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,gBAAD,CAAxB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAIE,kBAAkB,GAAGF,OAAO,CAAC,mBAAD,CAAhC;;AACA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,kBAAD,CAA/B;;AACA,IAAII,qBAAqB,GAAGJ,OAAO,CAAC,sBAAD,CAAnC;;AAEA,IAAIK,WAAW,GAAGD,qBAAqB,IAAID,iBAAzB,IAA8CD,kBAAhE;AAEA;;AACAI,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,GAA0B;AAC1C;;AAEA;AAAmC,MAAIC,YAAJ;AAEnC;;AACA,MAAIC,OAAO,GAAG;AACbC,IAAAA,MAAM,EAAE,SAARA,MAAQ,CAAUC,GAAV,EAAe;AACtB,UAAI,CAACF,OAAO,CAACG,GAAR,CAAYD,GAAZ,CAAL,EAAuB;AACtB,cAAM,IAAIb,UAAJ,CAAe,mCAAmCE,OAAO,CAACW,GAAD,CAAzD,CAAN;AACA;AACD,KALY;AAMb,cAAU,SAAV,OAAU,CAAUA,GAAV,EAAe;AACxB,aAAO,CAAC,CAACH,YAAF,IAAkBA,YAAY,CAAC,QAAD,CAAZ,CAAuBG,GAAvB,CAAzB;AACA,KARY;AASbE,IAAAA,GAAG,EAAE,SAALA,GAAK,CAAUF,GAAV,EAAe;AACnB,aAAOH,YAAY,IAAIA,YAAY,CAACK,GAAb,CAAiBF,GAAjB,CAAvB;AACA,KAXY;AAYbC,IAAAA,GAAG,EAAE,SAALA,GAAK,CAAUD,GAAV,EAAe;AACnB,aAAO,CAAC,CAACH,YAAF,IAAkBA,YAAY,CAACI,GAAb,CAAiBD,GAAjB,CAAzB;AACA,KAdY;AAebG,IAAAA,GAAG,EAAE,SAALA,GAAK,CAAUH,GAAV,EAAeI,KAAf,EAAsB;AAC1B,UAAI,CAACP,YAAL,EAAmB;AAClBA,QAAAA,YAAY,GAAGJ,WAAW,EAA1B;AACA;;AAEDI,MAAAA,YAAY,CAACM,GAAb,CAAiBH,GAAjB,EAAsBI,KAAtB;AACA;AArBY,GAAd,CAN0C,CA6B1C;;AACA,SAAON,OAAP;AACA,CA/BD","sourcesContent":["'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar inspect = require('object-inspect');\nvar getSideChannelList = require('side-channel-list');\nvar getSideChannelMap = require('side-channel-map');\nvar getSideChannelWeakMap = require('side-channel-weakmap');\n\nvar makeChannel = getSideChannelWeakMap || getSideChannelMap || getSideChannelList;\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannel() {\n\t/** @typedef {ReturnType<typeof getSideChannel>} Channel */\n\n\t/** @type {Channel | undefined} */ var $channelData;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\treturn !!$channelData && $channelData['delete'](key);\n\t\t},\n\t\tget: function (key) {\n\t\t\treturn $channelData && $channelData.get(key);\n\t\t},\n\t\thas: function (key) {\n\t\t\treturn !!$channelData && $channelData.has(key);\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$channelData) {\n\t\t\t\t$channelData = makeChannel();\n\t\t\t}\n\n\t\t\t$channelData.set(key, value);\n\t\t}\n\t};\n\t// @ts-expect-error TODO: figure out why this is erroring\n\treturn channel;\n};\n"]},"metadata":{},"sourceType":"script"}