{"ast":null,"code":"import _possibleConstructorReturn from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _isNativeReflectConstruct from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport _getPrototypeOf from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n\nimport { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function retryWhen(notifier) {\n  return function (source) {\n    return source.lift(new RetryWhenOperator(notifier, source));\n  };\n}\n\nvar RetryWhenOperator = /*#__PURE__*/function () {\n  function RetryWhenOperator(notifier, source) {\n    _classCallCheck(this, RetryWhenOperator);\n\n    this.notifier = notifier;\n    this.source = source;\n  }\n\n  return _createClass(RetryWhenOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    }\n  }]);\n}();\n\nvar RetryWhenSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  function RetryWhenSubscriber(destination, notifier, source) {\n    var _this;\n\n    _classCallCheck(this, RetryWhenSubscriber);\n\n    _this = _callSuper(this, RetryWhenSubscriber, [destination]);\n    _this.notifier = notifier;\n    _this.source = source;\n    return _this;\n  }\n\n  _inherits(RetryWhenSubscriber, _SimpleOuterSubscribe);\n\n  return _createClass(RetryWhenSubscriber, [{\n    key: \"error\",\n    value: function error(err) {\n      if (!this.isStopped) {\n        var errors = this.errors;\n        var retries = this.retries;\n        var retriesSubscription = this.retriesSubscription;\n\n        if (!retries) {\n          errors = new Subject();\n\n          try {\n            var notifier = this.notifier;\n            retries = notifier(errors);\n          } catch (e) {\n            return _superPropGet(RetryWhenSubscriber, \"error\", this, 3)([e]);\n          }\n\n          retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n        } else {\n          this.errors = undefined;\n          this.retriesSubscription = undefined;\n        }\n\n        this._unsubscribeAndRecycle();\n\n        this.errors = errors;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        errors.next(err);\n      }\n    }\n  }, {\n    key: \"_unsubscribe\",\n    value: function _unsubscribe() {\n      var errors = this.errors,\n          retriesSubscription = this.retriesSubscription;\n\n      if (errors) {\n        errors.unsubscribe();\n        this.errors = undefined;\n      }\n\n      if (retriesSubscription) {\n        retriesSubscription.unsubscribe();\n        this.retriesSubscription = undefined;\n      }\n\n      this.retries = undefined;\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext() {\n      var _unsubscribe = this._unsubscribe;\n      this._unsubscribe = null;\n\n      this._unsubscribeAndRecycle();\n\n      this._unsubscribe = _unsubscribe;\n      this.source.subscribe(this);\n    }\n  }]);\n}(SimpleOuterSubscriber); //# sourceMappingURL=retryWhen.js.map","map":{"version":3,"sources":["C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/rxjs/_esm2015/internal/operators/retryWhen.js"],"names":["Subject","SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","retryWhen","notifier","source","lift","RetryWhenOperator","call","subscriber","subscribe","RetryWhenSubscriber","destination","error","err","isStopped","errors","retries","retriesSubscription","e","undefined","_unsubscribeAndRecycle","next","_unsubscribe","unsubscribe","notifyNext"],"mappings":";;;;;;;;;;;;AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,qBAAT,EAAgCC,cAAhC,EAAgDC,qBAAhD,QAA6E,mBAA7E;AACA,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAA6B;AAChC,SAAO,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACC,IAAP,CAAY,IAAIC,iBAAJ,CAAsBH,QAAtB,EAAgCC,MAAhC,CAAZ,CAAZ;AAAA,GAAP;AACH;;IACKE,iB;AACF,6BAAYH,QAAZ,EAAsBC,MAAtB,EAA8B;AAAA;;AAC1B,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;;;WACD,SAAAG,IAAI,CAACC,UAAD,EAAaJ,MAAb,EAAqB;AACrB,aAAOA,MAAM,CAACK,SAAP,CAAiB,IAAIC,mBAAJ,CAAwBF,UAAxB,EAAoC,KAAKL,QAAzC,EAAmD,KAAKC,MAAxD,CAAjB,CAAP;AACH;;;;IAECM,mB;AACF,+BAAYC,WAAZ,EAAyBR,QAAzB,EAAmCC,MAAnC,EAA2C;AAAA;;AAAA;;AACvC,mDAAMO,WAAN;AACA,UAAKR,QAAL,GAAgBA,QAAhB;AACA,UAAKC,MAAL,GAAcA,MAAd;AAHuC;AAI1C;;;;;;WACD,SAAAQ,KAAK,CAACC,GAAD,EAAM;AACP,UAAI,CAAC,KAAKC,SAAV,EAAqB;AACjB,YAAIC,MAAM,GAAG,KAAKA,MAAlB;AACA,YAAIC,OAAO,GAAG,KAAKA,OAAnB;AACA,YAAIC,mBAAmB,GAAG,KAAKA,mBAA/B;;AACA,YAAI,CAACD,OAAL,EAAc;AACVD,UAAAA,MAAM,GAAG,IAAIjB,OAAJ,EAAT;;AACA,cAAI;AACA,gBAAQK,QAAR,GAAqB,IAArB,CAAQA,QAAR;AACAa,YAAAA,OAAO,GAAGb,QAAQ,CAACY,MAAD,CAAlB;AACH,WAHD,CAIA,OAAOG,CAAP,EAAU;AACN,yEAAmBA,CAAnB;AACH;;AACDD,UAAAA,mBAAmB,GAAGjB,cAAc,CAACgB,OAAD,EAAU,IAAIf,qBAAJ,CAA0B,IAA1B,CAAV,CAApC;AACH,SAVD,MAWK;AACD,eAAKc,MAAL,GAAcI,SAAd;AACA,eAAKF,mBAAL,GAA2BE,SAA3B;AACH;;AACD,aAAKC,sBAAL;;AACA,aAAKL,MAAL,GAAcA,MAAd;AACA,aAAKC,OAAL,GAAeA,OAAf;AACA,aAAKC,mBAAL,GAA2BA,mBAA3B;AACAF,QAAAA,MAAM,CAACM,IAAP,CAAYR,GAAZ;AACH;AACJ;;;WACD,SAAAS,YAAY,GAAG;AACX,UAAQP,MAAR,GAAwC,IAAxC,CAAQA,MAAR;AAAA,UAAgBE,mBAAhB,GAAwC,IAAxC,CAAgBA,mBAAhB;;AACA,UAAIF,MAAJ,EAAY;AACRA,QAAAA,MAAM,CAACQ,WAAP;AACA,aAAKR,MAAL,GAAcI,SAAd;AACH;;AACD,UAAIF,mBAAJ,EAAyB;AACrBA,QAAAA,mBAAmB,CAACM,WAApB;AACA,aAAKN,mBAAL,GAA2BE,SAA3B;AACH;;AACD,WAAKH,OAAL,GAAeG,SAAf;AACH;;;WACD,SAAAK,UAAU,GAAG;AACT,UAAQF,YAAR,GAAyB,IAAzB,CAAQA,YAAR;AACA,WAAKA,YAAL,GAAoB,IAApB;;AACA,WAAKF,sBAAL;;AACA,WAAKE,YAAL,GAAoBA,YAApB;AACA,WAAKlB,MAAL,CAAYK,SAAZ,CAAsB,IAAtB;AACH;;EAnD6BV,qB,GAqDlC","sourcesContent":["import { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function retryWhen(notifier) {\n    return (source) => source.lift(new RetryWhenOperator(notifier, source));\n}\nclass RetryWhenOperator {\n    constructor(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    }\n}\nclass RetryWhenSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, notifier, source) {\n        super(destination);\n        this.notifier = notifier;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            let errors = this.errors;\n            let retries = this.retries;\n            let retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject();\n                try {\n                    const { notifier } = this;\n                    retries = notifier(errors);\n                }\n                catch (e) {\n                    return super.error(e);\n                }\n                retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n            }\n            else {\n                this.errors = undefined;\n                this.retriesSubscription = undefined;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    }\n    _unsubscribe() {\n        const { errors, retriesSubscription } = this;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = undefined;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = undefined;\n        }\n        this.retries = undefined;\n    }\n    notifyNext() {\n        const { _unsubscribe } = this;\n        this._unsubscribe = null;\n        this._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        this.source.subscribe(this);\n    }\n}\n//# sourceMappingURL=retryWhen.js.map"]},"metadata":{},"sourceType":"module"}