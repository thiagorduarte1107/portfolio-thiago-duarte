{"ast":null,"code":"import _possibleConstructorReturn from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _isNativeReflectConstruct from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport _getPrototypeOf from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n\nimport { Subject } from '../Subject';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function windowTime(windowTimeSpan) {\n  var scheduler = async;\n  var windowCreationInterval = null;\n  var maxWindowSize = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = Number(arguments[2]);\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = Number(arguments[1]);\n  }\n\n  return function windowTimeOperatorFunction(source) {\n    return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nvar WindowTimeOperator = /*#__PURE__*/function () {\n  function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n    _classCallCheck(this, WindowTimeOperator);\n\n    this.windowTimeSpan = windowTimeSpan;\n    this.windowCreationInterval = windowCreationInterval;\n    this.maxWindowSize = maxWindowSize;\n    this.scheduler = scheduler;\n  }\n\n  return _createClass(WindowTimeOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    }\n  }]);\n}();\n\nvar CountedSubject = /*#__PURE__*/function (_Subject) {\n  function CountedSubject() {\n    var _this;\n\n    _classCallCheck(this, CountedSubject);\n\n    _this = _callSuper(this, CountedSubject, arguments);\n    _this._numberOfNextedValues = 0;\n    return _this;\n  }\n\n  _inherits(CountedSubject, _Subject);\n\n  return _createClass(CountedSubject, [{\n    key: \"next\",\n    value: function next(value) {\n      this._numberOfNextedValues++;\n\n      _superPropGet(CountedSubject, \"next\", this, 3)([value]);\n    }\n  }, {\n    key: \"numberOfNextedValues\",\n    get: function get() {\n      return this._numberOfNextedValues;\n    }\n  }]);\n}(Subject);\n\nvar WindowTimeSubscriber = /*#__PURE__*/function (_Subscriber) {\n  function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n    var _this2;\n\n    _classCallCheck(this, WindowTimeSubscriber);\n\n    _this2 = _callSuper(this, WindowTimeSubscriber, [destination]);\n    _this2.destination = destination;\n    _this2.windowTimeSpan = windowTimeSpan;\n    _this2.windowCreationInterval = windowCreationInterval;\n    _this2.maxWindowSize = maxWindowSize;\n    _this2.scheduler = scheduler;\n    _this2.windows = [];\n\n    var window = _this2.openWindow();\n\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      var closeState = {\n        subscriber: _this2,\n        window: window,\n        context: null\n      };\n      var creationState = {\n        windowTimeSpan: windowTimeSpan,\n        windowCreationInterval: windowCreationInterval,\n        subscriber: _this2,\n        scheduler: scheduler\n      };\n\n      _this2.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n\n      _this2.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      var timeSpanOnlyState = {\n        subscriber: _this2,\n        window: window,\n        windowTimeSpan: windowTimeSpan\n      };\n\n      _this2.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n\n    return _this2;\n  }\n\n  _inherits(WindowTimeSubscriber, _Subscriber);\n\n  return _createClass(WindowTimeSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var windows = this.windows;\n      var len = windows.length;\n\n      for (var i = 0; i < len; i++) {\n        var window = windows[i];\n\n        if (!window.closed) {\n          window.next(value);\n\n          if (window.numberOfNextedValues >= this.maxWindowSize) {\n            this.closeWindow(window);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_error\",\n    value: function _error(err) {\n      var windows = this.windows;\n\n      while (windows.length > 0) {\n        windows.shift().error(err);\n      }\n\n      this.destination.error(err);\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var windows = this.windows;\n\n      while (windows.length > 0) {\n        var window = windows.shift();\n\n        if (!window.closed) {\n          window.complete();\n        }\n      }\n\n      this.destination.complete();\n    }\n  }, {\n    key: \"openWindow\",\n    value: function openWindow() {\n      var window = new CountedSubject();\n      this.windows.push(window);\n      var destination = this.destination;\n      destination.next(window);\n      return window;\n    }\n  }, {\n    key: \"closeWindow\",\n    value: function closeWindow(window) {\n      window.complete();\n      var windows = this.windows;\n      windows.splice(windows.indexOf(window), 1);\n    }\n  }]);\n}(Subscriber);\n\nfunction dispatchWindowTimeSpanOnly(state) {\n  var subscriber = state.subscriber,\n      windowTimeSpan = state.windowTimeSpan,\n      window = state.window;\n\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation(state) {\n  var windowTimeSpan = state.windowTimeSpan,\n      subscriber = state.subscriber,\n      scheduler = state.scheduler,\n      windowCreationInterval = state.windowCreationInterval;\n  var window = subscriber.openWindow();\n  var action = this;\n  var context = {\n    action: action,\n    subscription: null\n  };\n  var timeSpanState = {\n    subscriber: subscriber,\n    window: window,\n    context: context\n  };\n  context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose(state) {\n  var subscriber = state.subscriber,\n      window = state.window,\n      context = state.context;\n\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n\n  subscriber.closeWindow(window);\n} //# sourceMappingURL=windowTime.js.map","map":{"version":3,"sources":["C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/rxjs/_esm2015/internal/operators/windowTime.js"],"names":["Subject","async","Subscriber","isNumeric","isScheduler","windowTime","windowTimeSpan","scheduler","windowCreationInterval","maxWindowSize","Number","POSITIVE_INFINITY","arguments","windowTimeOperatorFunction","source","lift","WindowTimeOperator","call","subscriber","subscribe","WindowTimeSubscriber","CountedSubject","_numberOfNextedValues","next","value","destination","windows","window","openWindow","closeState","context","creationState","add","schedule","dispatchWindowClose","dispatchWindowCreation","timeSpanOnlyState","dispatchWindowTimeSpanOnly","_next","len","length","i","closed","numberOfNextedValues","closeWindow","_error","err","shift","error","_complete","complete","push","splice","indexOf","state","action","subscription","timeSpanState","remove"],"mappings":"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","sourcesContent":["import { Subject } from '../Subject';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function windowTime(windowTimeSpan) {\n    let scheduler = async;\n    let windowCreationInterval = null;\n    let maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric(arguments[2])) {\n        maxWindowSize = Number(arguments[2]);\n    }\n    if (isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric(arguments[1])) {\n        windowCreationInterval = Number(arguments[1]);\n    }\n    return function windowTimeOperatorFunction(source) {\n        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n    };\n}\nclass WindowTimeOperator {\n    constructor(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    }\n}\nclass CountedSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this._numberOfNextedValues = 0;\n    }\n    next(value) {\n        this._numberOfNextedValues++;\n        super.next(value);\n    }\n    get numberOfNextedValues() {\n        return this._numberOfNextedValues;\n    }\n}\nclass WindowTimeSubscriber extends Subscriber {\n    constructor(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        super(destination);\n        this.destination = destination;\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n        this.windows = [];\n        const window = this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            const closeState = { subscriber: this, window, context: null };\n            const creationState = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n            this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            const timeSpanOnlyState = { subscriber: this, window, windowTimeSpan };\n            this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n    }\n    _next(value) {\n        const windows = this.windows;\n        const len = windows.length;\n        for (let i = 0; i < len; i++) {\n            const window = windows[i];\n            if (!window.closed) {\n                window.next(value);\n                if (window.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window);\n                }\n            }\n        }\n    }\n    _error(err) {\n        const windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        const windows = this.windows;\n        while (windows.length > 0) {\n            const window = windows.shift();\n            if (!window.closed) {\n                window.complete();\n            }\n        }\n        this.destination.complete();\n    }\n    openWindow() {\n        const window = new CountedSubject();\n        this.windows.push(window);\n        const destination = this.destination;\n        destination.next(window);\n        return window;\n    }\n    closeWindow(window) {\n        window.complete();\n        const windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    }\n}\nfunction dispatchWindowTimeSpanOnly(state) {\n    const { subscriber, windowTimeSpan, window } = state;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n    const window = subscriber.openWindow();\n    const action = this;\n    let context = { action, subscription: null };\n    const timeSpanState = { subscriber, window, context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    const { subscriber, window, context } = state;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n//# sourceMappingURL=windowTime.js.map"]},"metadata":{},"sourceType":"module"}