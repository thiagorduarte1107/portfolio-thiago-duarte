{"ast":null,"code":"import _possibleConstructorReturn from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _isNativeReflectConstruct from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport _getPrototypeOf from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function zip() {\n  for (var _len = arguments.length, observables = new Array(_len), _key = 0; _key < _len; _key++) {\n    observables[_key] = arguments[_key];\n  }\n\n  var resultSelector = observables[observables.length - 1];\n\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nexport var ZipOperator = /*#__PURE__*/function () {\n  function ZipOperator(resultSelector) {\n    _classCallCheck(this, ZipOperator);\n\n    this.resultSelector = resultSelector;\n  }\n\n  return _createClass(ZipOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    }\n  }]);\n}();\nexport var ZipSubscriber = /*#__PURE__*/function (_Subscriber) {\n  function ZipSubscriber(destination, resultSelector) {\n    var _this;\n\n    var values = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Object.create(null);\n\n    _classCallCheck(this, ZipSubscriber);\n\n    _this = _callSuper(this, ZipSubscriber, [destination]);\n    _this.resultSelector = resultSelector;\n    _this.iterators = [];\n    _this.active = 0;\n    _this.resultSelector = typeof resultSelector === 'function' ? resultSelector : undefined;\n    return _this;\n  }\n\n  _inherits(ZipSubscriber, _Subscriber);\n\n  return _createClass(ZipSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var iterators = this.iterators;\n\n      if (isArray(value)) {\n        iterators.push(new StaticArrayIterator(value));\n      } else if (typeof value[Symbol_iterator] === 'function') {\n        iterators.push(new StaticIterator(value[Symbol_iterator]()));\n      } else {\n        iterators.push(new ZipBufferIterator(this.destination, this, value));\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var iterators = this.iterators;\n      var len = iterators.length;\n      this.unsubscribe();\n\n      if (len === 0) {\n        this.destination.complete();\n        return;\n      }\n\n      this.active = len;\n\n      for (var i = 0; i < len; i++) {\n        var iterator = iterators[i];\n\n        if (iterator.stillUnsubscribed) {\n          var destination = this.destination;\n          destination.add(iterator.subscribe());\n        } else {\n          this.active--;\n        }\n      }\n    }\n  }, {\n    key: \"notifyInactive\",\n    value: function notifyInactive() {\n      this.active--;\n\n      if (this.active === 0) {\n        this.destination.complete();\n      }\n    }\n  }, {\n    key: \"checkIterators\",\n    value: function checkIterators() {\n      var iterators = this.iterators;\n      var len = iterators.length;\n      var destination = this.destination;\n\n      for (var i = 0; i < len; i++) {\n        var iterator = iterators[i];\n\n        if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n          return;\n        }\n      }\n\n      var shouldComplete = false;\n      var args = [];\n\n      for (var _i = 0; _i < len; _i++) {\n        var _iterator = iterators[_i];\n\n        var result = _iterator.next();\n\n        if (_iterator.hasCompleted()) {\n          shouldComplete = true;\n        }\n\n        if (result.done) {\n          destination.complete();\n          return;\n        }\n\n        args.push(result.value);\n      }\n\n      if (this.resultSelector) {\n        this._tryresultSelector(args);\n      } else {\n        destination.next(args);\n      }\n\n      if (shouldComplete) {\n        destination.complete();\n      }\n    }\n  }, {\n    key: \"_tryresultSelector\",\n    value: function _tryresultSelector(args) {\n      var result;\n\n      try {\n        result = this.resultSelector.apply(this, args);\n      } catch (err) {\n        this.destination.error(err);\n        return;\n      }\n\n      this.destination.next(result);\n    }\n  }]);\n}(Subscriber);\n\nvar StaticIterator = /*#__PURE__*/function () {\n  function StaticIterator(iterator) {\n    _classCallCheck(this, StaticIterator);\n\n    this.iterator = iterator;\n    this.nextResult = iterator.next();\n  }\n\n  return _createClass(StaticIterator, [{\n    key: \"hasValue\",\n    value: function hasValue() {\n      return true;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var result = this.nextResult;\n      this.nextResult = this.iterator.next();\n      return result;\n    }\n  }, {\n    key: \"hasCompleted\",\n    value: function hasCompleted() {\n      var nextResult = this.nextResult;\n      return Boolean(nextResult && nextResult.done);\n    }\n  }]);\n}();\n\nvar StaticArrayIterator = /*#__PURE__*/function () {\n  function StaticArrayIterator(array) {\n    _classCallCheck(this, StaticArrayIterator);\n\n    this.array = array;\n    this.index = 0;\n    this.length = 0;\n    this.length = array.length;\n  }\n\n  return _createClass(StaticArrayIterator, [{\n    key: Symbol_iterator,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"next\",\n    value: function next(value) {\n      var i = this.index++;\n      var array = this.array;\n      return i < this.length ? {\n        value: array[i],\n        done: false\n      } : {\n        value: null,\n        done: true\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return this.array.length > this.index;\n    }\n  }, {\n    key: \"hasCompleted\",\n    value: function hasCompleted() {\n      return this.array.length === this.index;\n    }\n  }]);\n}();\n\nvar ZipBufferIterator = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  function ZipBufferIterator(destination, parent, observable) {\n    var _this2;\n\n    _classCallCheck(this, ZipBufferIterator);\n\n    _this2 = _callSuper(this, ZipBufferIterator, [destination]);\n    _this2.parent = parent;\n    _this2.observable = observable;\n    _this2.stillUnsubscribed = true;\n    _this2.buffer = [];\n    _this2.isComplete = false;\n    return _this2;\n  }\n\n  _inherits(ZipBufferIterator, _SimpleOuterSubscribe);\n\n  return _createClass(ZipBufferIterator, [{\n    key: Symbol_iterator,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var buffer = this.buffer;\n\n      if (buffer.length === 0 && this.isComplete) {\n        return {\n          value: null,\n          done: true\n        };\n      } else {\n        return {\n          value: buffer.shift(),\n          done: false\n        };\n      }\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return this.buffer.length > 0;\n    }\n  }, {\n    key: \"hasCompleted\",\n    value: function hasCompleted() {\n      return this.buffer.length === 0 && this.isComplete;\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      if (this.buffer.length > 0) {\n        this.isComplete = true;\n        this.parent.notifyInactive();\n      } else {\n        this.destination.complete();\n      }\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext(innerValue) {\n      this.buffer.push(innerValue);\n      this.parent.checkIterators();\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      return innerSubscribe(this.observable, new SimpleInnerSubscriber(this));\n    }\n  }]);\n}(SimpleOuterSubscriber); //# sourceMappingURL=zip.js.map","map":{"version":3,"sources":["C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/rxjs/_esm2015/internal/observable/zip.js"],"names":["fromArray","isArray","Subscriber","iterator","Symbol_iterator","SimpleOuterSubscriber","SimpleInnerSubscriber","innerSubscribe","zip","observables","resultSelector","length","pop","undefined","lift","ZipOperator","call","subscriber","source","subscribe","ZipSubscriber","destination","values","Object","create","iterators","active","_next","value","push","StaticArrayIterator","StaticIterator","ZipBufferIterator","_complete","len","unsubscribe","complete","i","stillUnsubscribed","add","notifyInactive","checkIterators","hasValue","shouldComplete","args","result","next","hasCompleted","done","_tryresultSelector","apply","err","error","nextResult","Boolean","array","index","parent","observable","buffer","isComplete","shift","notifyComplete","notifyNext","innerValue"],"mappings":"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","sourcesContent":["import { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function zip(...observables) {\n    const resultSelector = observables[observables.length - 1];\n    if (typeof resultSelector === 'function') {\n        observables.pop();\n    }\n    return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nexport class ZipOperator {\n    constructor(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    }\n}\nexport class ZipSubscriber extends Subscriber {\n    constructor(destination, resultSelector, values = Object.create(null)) {\n        super(destination);\n        this.resultSelector = resultSelector;\n        this.iterators = [];\n        this.active = 0;\n        this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : undefined;\n    }\n    _next(value) {\n        const iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    }\n    _complete() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        this.unsubscribe();\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                const destination = this.destination;\n                destination.add(iterator.subscribe());\n            }\n            else {\n                this.active--;\n            }\n        }\n    }\n    notifyInactive() {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    }\n    checkIterators() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        const destination = this.destination;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        let shouldComplete = false;\n        const args = [];\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            let result = iterator.next();\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    }\n    _tryresultSelector(args) {\n        let result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\nclass StaticIterator {\n    constructor(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    hasValue() {\n        return true;\n    }\n    next() {\n        const result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    }\n    hasCompleted() {\n        const nextResult = this.nextResult;\n        return Boolean(nextResult && nextResult.done);\n    }\n}\nclass StaticArrayIterator {\n    constructor(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    [Symbol_iterator]() {\n        return this;\n    }\n    next(value) {\n        const i = this.index++;\n        const array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    }\n    hasValue() {\n        return this.array.length > this.index;\n    }\n    hasCompleted() {\n        return this.array.length === this.index;\n    }\n}\nclass ZipBufferIterator extends SimpleOuterSubscriber {\n    constructor(destination, parent, observable) {\n        super(destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    [Symbol_iterator]() {\n        return this;\n    }\n    next() {\n        const buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    }\n    hasValue() {\n        return this.buffer.length > 0;\n    }\n    hasCompleted() {\n        return this.buffer.length === 0 && this.isComplete;\n    }\n    notifyComplete() {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    notifyNext(innerValue) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    }\n    subscribe() {\n        return innerSubscribe(this.observable, new SimpleInnerSubscriber(this));\n    }\n}\n//# sourceMappingURL=zip.js.map"]},"metadata":{},"sourceType":"module"}