{"ast":null,"code":"import _possibleConstructorReturn from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _isNativeReflectConstruct from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport _getPrototypeOf from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\nimport { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate) {\n  var inclusive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return function (source) {\n    return source.lift(new TakeWhileOperator(predicate, inclusive));\n  };\n}\n\nvar TakeWhileOperator = /*#__PURE__*/function () {\n  function TakeWhileOperator(predicate, inclusive) {\n    _classCallCheck(this, TakeWhileOperator);\n\n    this.predicate = predicate;\n    this.inclusive = inclusive;\n  }\n\n  return _createClass(TakeWhileOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n    }\n  }]);\n}();\n\nvar TakeWhileSubscriber = /*#__PURE__*/function (_Subscriber) {\n  function TakeWhileSubscriber(destination, predicate, inclusive) {\n    var _this;\n\n    _classCallCheck(this, TakeWhileSubscriber);\n\n    _this = _callSuper(this, TakeWhileSubscriber, [destination]);\n    _this.predicate = predicate;\n    _this.inclusive = inclusive;\n    _this.index = 0;\n    return _this;\n  }\n\n  _inherits(TakeWhileSubscriber, _Subscriber);\n\n  return _createClass(TakeWhileSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var destination = this.destination;\n      var result;\n\n      try {\n        result = this.predicate(value, this.index++);\n      } catch (err) {\n        destination.error(err);\n        return;\n      }\n\n      this.nextOrComplete(value, result);\n    }\n  }, {\n    key: \"nextOrComplete\",\n    value: function nextOrComplete(value, predicateResult) {\n      var destination = this.destination;\n\n      if (Boolean(predicateResult)) {\n        destination.next(value);\n      } else {\n        if (this.inclusive) {\n          destination.next(value);\n        }\n\n        destination.complete();\n      }\n    }\n  }]);\n}(Subscriber); //# sourceMappingURL=takeWhile.js.map","map":{"version":3,"sources":["C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/rxjs/_esm2015/internal/operators/takeWhile.js"],"names":["Subscriber","takeWhile","predicate","inclusive","source","lift","TakeWhileOperator","call","subscriber","subscribe","TakeWhileSubscriber","destination","index","_next","value","result","err","error","nextOrComplete","predicateResult","Boolean","next","complete"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAO,SAASC,SAAT,CAAmBC,SAAnB,EAAiD;AAAA,MAAnBC,SAAmB,uEAAP,KAAO;AACpD,SAAO,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACC,IAAP,CAAY,IAAIC,iBAAJ,CAAsBJ,SAAtB,EAAiCC,SAAjC,CAAZ,CAAZ;AAAA,GAAP;AACH;;IACKG,iB;AACF,6BAAYJ,SAAZ,EAAuBC,SAAvB,EAAkC;AAAA;;AAC9B,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;;;;WACD,SAAAI,IAAI,CAACC,UAAD,EAAaJ,MAAb,EAAqB;AACrB,aAAOA,MAAM,CAACK,SAAP,CAAiB,IAAIC,mBAAJ,CAAwBF,UAAxB,EAAoC,KAAKN,SAAzC,EAAoD,KAAKC,SAAzD,CAAjB,CAAP;AACH;;;;IAECO,mB;AACF,+BAAYC,WAAZ,EAAyBT,SAAzB,EAAoCC,SAApC,EAA+C;AAAA;;AAAA;;AAC3C,mDAAMQ,WAAN;AACA,UAAKT,SAAL,GAAiBA,SAAjB;AACA,UAAKC,SAAL,GAAiBA,SAAjB;AACA,UAAKS,KAAL,GAAa,CAAb;AAJ2C;AAK9C;;;;;;WACD,SAAAC,KAAK,CAACC,KAAD,EAAQ;AACT,UAAMH,WAAW,GAAG,KAAKA,WAAzB;AACA,UAAII,MAAJ;;AACA,UAAI;AACAA,QAAAA,MAAM,GAAG,KAAKb,SAAL,CAAeY,KAAf,EAAsB,KAAKF,KAAL,EAAtB,CAAT;AACH,OAFD,CAGA,OAAOI,GAAP,EAAY;AACRL,QAAAA,WAAW,CAACM,KAAZ,CAAkBD,GAAlB;AACA;AACH;;AACD,WAAKE,cAAL,CAAoBJ,KAApB,EAA2BC,MAA3B;AACH;;;WACD,SAAAG,cAAc,CAACJ,KAAD,EAAQK,eAAR,EAAyB;AACnC,UAAMR,WAAW,GAAG,KAAKA,WAAzB;;AACA,UAAIS,OAAO,CAACD,eAAD,CAAX,EAA8B;AAC1BR,QAAAA,WAAW,CAACU,IAAZ,CAAiBP,KAAjB;AACH,OAFD,MAGK;AACD,YAAI,KAAKX,SAAT,EAAoB;AAChBQ,UAAAA,WAAW,CAACU,IAAZ,CAAiBP,KAAjB;AACH;;AACDH,QAAAA,WAAW,CAACW,QAAZ;AACH;AACJ;;EA9B6BtB,U,GAgClC","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate, inclusive = false) {\n    return (source) => source.lift(new TakeWhileOperator(predicate, inclusive));\n}\nclass TakeWhileOperator {\n    constructor(predicate, inclusive) {\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n    }\n}\nclass TakeWhileSubscriber extends Subscriber {\n    constructor(destination, predicate, inclusive) {\n        super(destination);\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        let result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    }\n    nextOrComplete(value, predicateResult) {\n        const destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            if (this.inclusive) {\n                destination.next(value);\n            }\n            destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=takeWhile.js.map"]},"metadata":{},"sourceType":"module"}