{"ast":null,"code":"import _possibleConstructorReturn from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _isNativeReflectConstruct from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport _getPrototypeOf from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function expand(project) {\n  var concurrent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.POSITIVE_INFINITY;\n  var scheduler = arguments.length > 2 ? arguments[2] : undefined;\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n  return function (source) {\n    return source.lift(new ExpandOperator(project, concurrent, scheduler));\n  };\n}\nexport var ExpandOperator = /*#__PURE__*/function () {\n  function ExpandOperator(project, concurrent, scheduler) {\n    _classCallCheck(this, ExpandOperator);\n\n    this.project = project;\n    this.concurrent = concurrent;\n    this.scheduler = scheduler;\n  }\n\n  return _createClass(ExpandOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    }\n  }]);\n}();\nexport var ExpandSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  function ExpandSubscriber(destination, project, concurrent, scheduler) {\n    var _this;\n\n    _classCallCheck(this, ExpandSubscriber);\n\n    _this = _callSuper(this, ExpandSubscriber, [destination]);\n    _this.project = project;\n    _this.concurrent = concurrent;\n    _this.scheduler = scheduler;\n    _this.index = 0;\n    _this.active = 0;\n    _this.hasCompleted = false;\n\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      _this.buffer = [];\n    }\n\n    return _this;\n  }\n\n  _inherits(ExpandSubscriber, _SimpleOuterSubscribe);\n\n  return _createClass(ExpandSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var destination = this.destination;\n\n      if (destination.closed) {\n        this._complete();\n\n        return;\n      }\n\n      var index = this.index++;\n\n      if (this.active < this.concurrent) {\n        destination.next(value);\n\n        try {\n          var project = this.project;\n          var result = project(value, index);\n\n          if (!this.scheduler) {\n            this.subscribeToProjection(result, value, index);\n          } else {\n            var state = {\n              subscriber: this,\n              result: result,\n              value: value,\n              index: index\n            };\n            var _destination = this.destination;\n\n            _destination.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n          }\n        } catch (e) {\n          destination.error(e);\n        }\n      } else {\n        this.buffer.push(value);\n      }\n    }\n  }, {\n    key: \"subscribeToProjection\",\n    value: function subscribeToProjection(result, value, index) {\n      this.active++;\n      var destination = this.destination;\n      destination.add(innerSubscribe(result, new SimpleInnerSubscriber(this)));\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.hasCompleted = true;\n\n      if (this.hasCompleted && this.active === 0) {\n        this.destination.complete();\n      }\n\n      this.unsubscribe();\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext(innerValue) {\n      this._next(innerValue);\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      var buffer = this.buffer;\n      this.active--;\n\n      if (buffer && buffer.length > 0) {\n        this._next(buffer.shift());\n      }\n\n      if (this.hasCompleted && this.active === 0) {\n        this.destination.complete();\n      }\n    }\n  }], [{\n    key: \"dispatch\",\n    value: function dispatch(arg) {\n      var subscriber = arg.subscriber,\n          result = arg.result,\n          value = arg.value,\n          index = arg.index;\n      subscriber.subscribeToProjection(result, value, index);\n    }\n  }]);\n}(SimpleOuterSubscriber); //# sourceMappingURL=expand.js.map","map":{"version":3,"sources":["C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/rxjs/_esm2015/internal/operators/expand.js"],"names":["SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","expand","project","concurrent","Number","POSITIVE_INFINITY","scheduler","source","lift","ExpandOperator","call","subscriber","subscribe","ExpandSubscriber","destination","index","active","hasCompleted","buffer","_next","value","closed","_complete","next","result","subscribeToProjection","state","add","schedule","dispatch","e","error","push","complete","unsubscribe","notifyNext","innerValue","notifyComplete","length","shift","arg"],"mappings":";;;;;;;;;AAAA,SAASA,qBAAT,EAAgCC,cAAhC,EAAgDC,qBAAhD,QAA6E,mBAA7E;AACA,OAAO,SAASC,MAAT,CAAgBC,OAAhB,EAA2E;AAAA,MAAlDC,UAAkD,uEAArCC,MAAM,CAACC,iBAA8B;AAAA,MAAXC,SAAW;AAC9EH,EAAAA,UAAU,GAAG,CAACA,UAAU,IAAI,CAAf,IAAoB,CAApB,GAAwBC,MAAM,CAACC,iBAA/B,GAAmDF,UAAhE;AACA,SAAO,UAACI,MAAD;AAAA,WAAYA,MAAM,CAACC,IAAP,CAAY,IAAIC,cAAJ,CAAmBP,OAAnB,EAA4BC,UAA5B,EAAwCG,SAAxC,CAAZ,CAAZ;AAAA,GAAP;AACH;AACD,WAAaG,cAAb;AACI,0BAAYP,OAAZ,EAAqBC,UAArB,EAAiCG,SAAjC,EAA4C;AAAA;;AACxC,SAAKJ,OAAL,GAAeA,OAAf;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKG,SAAL,GAAiBA,SAAjB;AACH;;AALL;AAAA;AAAA,WAMI,SAAAI,IAAI,CAACC,UAAD,EAAaJ,MAAb,EAAqB;AACrB,aAAOA,MAAM,CAACK,SAAP,CAAiB,IAAIC,gBAAJ,CAAqBF,UAArB,EAAiC,KAAKT,OAAtC,EAA+C,KAAKC,UAApD,EAAgE,KAAKG,SAArE,CAAjB,CAAP;AACH;AARL;AAAA;AAUA,WAAaO,gBAAb;AACI,4BAAYC,WAAZ,EAAyBZ,OAAzB,EAAkCC,UAAlC,EAA8CG,SAA9C,EAAyD;AAAA;;AAAA;;AACrD,gDAAMQ,WAAN;AACA,UAAKZ,OAAL,GAAeA,OAAf;AACA,UAAKC,UAAL,GAAkBA,UAAlB;AACA,UAAKG,SAAL,GAAiBA,SAAjB;AACA,UAAKS,KAAL,GAAa,CAAb;AACA,UAAKC,MAAL,GAAc,CAAd;AACA,UAAKC,YAAL,GAAoB,KAApB;;AACA,QAAId,UAAU,GAAGC,MAAM,CAACC,iBAAxB,EAA2C;AACvC,YAAKa,MAAL,GAAc,EAAd;AACH;;AAVoD;AAWxD;;AAZL;;AAAA;AAAA;AAAA,WAiBI,SAAAC,KAAK,CAACC,KAAD,EAAQ;AACT,UAAMN,WAAW,GAAG,KAAKA,WAAzB;;AACA,UAAIA,WAAW,CAACO,MAAhB,EAAwB;AACpB,aAAKC,SAAL;;AACA;AACH;;AACD,UAAMP,KAAK,GAAG,KAAKA,KAAL,EAAd;;AACA,UAAI,KAAKC,MAAL,GAAc,KAAKb,UAAvB,EAAmC;AAC/BW,QAAAA,WAAW,CAACS,IAAZ,CAAiBH,KAAjB;;AACA,YAAI;AACA,cAAQlB,OAAR,GAAoB,IAApB,CAAQA,OAAR;AACA,cAAMsB,MAAM,GAAGtB,OAAO,CAACkB,KAAD,EAAQL,KAAR,CAAtB;;AACA,cAAI,CAAC,KAAKT,SAAV,EAAqB;AACjB,iBAAKmB,qBAAL,CAA2BD,MAA3B,EAAmCJ,KAAnC,EAA0CL,KAA1C;AACH,WAFD,MAGK;AACD,gBAAMW,KAAK,GAAG;AAAEf,cAAAA,UAAU,EAAE,IAAd;AAAoBa,cAAAA,MAAM,EAANA,MAApB;AAA4BJ,cAAAA,KAAK,EAALA,KAA5B;AAAmCL,cAAAA,KAAK,EAALA;AAAnC,aAAd;AACA,gBAAMD,YAAW,GAAG,KAAKA,WAAzB;;AACAA,YAAAA,YAAW,CAACa,GAAZ,CAAgB,KAAKrB,SAAL,CAAesB,QAAf,CAAwBf,gBAAgB,CAACgB,QAAzC,EAAmD,CAAnD,EAAsDH,KAAtD,CAAhB;AACH;AACJ,SAXD,CAYA,OAAOI,CAAP,EAAU;AACNhB,UAAAA,WAAW,CAACiB,KAAZ,CAAkBD,CAAlB;AACH;AACJ,OAjBD,MAkBK;AACD,aAAKZ,MAAL,CAAYc,IAAZ,CAAiBZ,KAAjB;AACH;AACJ;AA7CL;AAAA;AAAA,WA8CI,SAAAK,qBAAqB,CAACD,MAAD,EAASJ,KAAT,EAAgBL,KAAhB,EAAuB;AACxC,WAAKC,MAAL;AACA,UAAMF,WAAW,GAAG,KAAKA,WAAzB;AACAA,MAAAA,WAAW,CAACa,GAAZ,CAAgB5B,cAAc,CAACyB,MAAD,EAAS,IAAIxB,qBAAJ,CAA0B,IAA1B,CAAT,CAA9B;AACH;AAlDL;AAAA;AAAA,WAmDI,SAAAsB,SAAS,GAAG;AACR,WAAKL,YAAL,GAAoB,IAApB;;AACA,UAAI,KAAKA,YAAL,IAAqB,KAAKD,MAAL,KAAgB,CAAzC,EAA4C;AACxC,aAAKF,WAAL,CAAiBmB,QAAjB;AACH;;AACD,WAAKC,WAAL;AACH;AAzDL;AAAA;AAAA,WA0DI,SAAAC,UAAU,CAACC,UAAD,EAAa;AACnB,WAAKjB,KAAL,CAAWiB,UAAX;AACH;AA5DL;AAAA;AAAA,WA6DI,SAAAC,cAAc,GAAG;AACb,UAAMnB,MAAM,GAAG,KAAKA,MAApB;AACA,WAAKF,MAAL;;AACA,UAAIE,MAAM,IAAIA,MAAM,CAACoB,MAAP,GAAgB,CAA9B,EAAiC;AAC7B,aAAKnB,KAAL,CAAWD,MAAM,CAACqB,KAAP,EAAX;AACH;;AACD,UAAI,KAAKtB,YAAL,IAAqB,KAAKD,MAAL,KAAgB,CAAzC,EAA4C;AACxC,aAAKF,WAAL,CAAiBmB,QAAjB;AACH;AACJ;AAtEL;AAAA;AAAA,WAaI,SAAOJ,QAAP,CAAgBW,GAAhB,EAAqB;AACjB,UAAQ7B,UAAR,GAA6C6B,GAA7C,CAAQ7B,UAAR;AAAA,UAAoBa,MAApB,GAA6CgB,GAA7C,CAAoBhB,MAApB;AAAA,UAA4BJ,KAA5B,GAA6CoB,GAA7C,CAA4BpB,KAA5B;AAAA,UAAmCL,KAAnC,GAA6CyB,GAA7C,CAAmCzB,KAAnC;AACAJ,MAAAA,UAAU,CAACc,qBAAX,CAAiCD,MAAjC,EAAyCJ,KAAzC,EAAgDL,KAAhD;AACH;AAhBL;AAAA,EAAsCjB,qBAAtC,E,CAwEA","sourcesContent":["import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function expand(project, concurrent = Number.POSITIVE_INFINITY, scheduler) {\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return (source) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\nexport class ExpandOperator {\n    constructor(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    }\n}\nexport class ExpandSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, project, concurrent, scheduler) {\n        super(destination);\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n        this.index = 0;\n        this.active = 0;\n        this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            this.buffer = [];\n        }\n    }\n    static dispatch(arg) {\n        const { subscriber, result, value, index } = arg;\n        subscriber.subscribeToProjection(result, value, index);\n    }\n    _next(value) {\n        const destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        const index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            try {\n                const { project } = this;\n                const result = project(value, index);\n                if (!this.scheduler) {\n                    this.subscribeToProjection(result, value, index);\n                }\n                else {\n                    const state = { subscriber: this, result, value, index };\n                    const destination = this.destination;\n                    destination.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n                }\n            }\n            catch (e) {\n                destination.error(e);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    }\n    subscribeToProjection(result, value, index) {\n        this.active++;\n        const destination = this.destination;\n        destination.add(innerSubscribe(result, new SimpleInnerSubscriber(this)));\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    }\n    notifyNext(innerValue) {\n        this._next(innerValue);\n    }\n    notifyComplete() {\n        const buffer = this.buffer;\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=expand.js.map"]},"metadata":{},"sourceType":"module"}