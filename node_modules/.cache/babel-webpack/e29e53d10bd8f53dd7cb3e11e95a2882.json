{"ast":null,"code":"'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\nvar defaults = {\n  allowDots: false,\n  allowEmptyArrays: false,\n  allowPrototypes: false,\n  allowSparse: false,\n  arrayLimit: 20,\n  charset: 'utf-8',\n  charsetSentinel: false,\n  comma: false,\n  decodeDotInKeys: false,\n  decoder: utils.decode,\n  delimiter: '&',\n  depth: 5,\n  duplicates: 'combine',\n  ignoreQueryPrefix: false,\n  interpretNumericEntities: false,\n  parameterLimit: 1000,\n  parseArrays: true,\n  plainObjects: false,\n  strictDepth: false,\n  strictNullHandling: false,\n  throwOnLimitExceeded: false\n};\n\nvar interpretNumericEntities = function interpretNumericEntities(str) {\n  return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n    return String.fromCharCode(parseInt(numberStr, 10));\n  });\n};\n\nvar parseArrayValue = function parseArrayValue(val, options, currentArrayLength) {\n  if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n    return val.split(',');\n  }\n\n  if (options.throwOnLimitExceeded && currentArrayLength >= options.arrayLimit) {\n    throw new RangeError('Array limit exceeded. Only ' + options.arrayLimit + ' element' + (options.arrayLimit === 1 ? '' : 's') + ' allowed in an array.');\n  }\n\n  return val;\n}; // This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\n\n\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\n\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n  var obj = {\n    __proto__: null\n  };\n  var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n  cleanStr = cleanStr.replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n  var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n  var parts = cleanStr.split(options.delimiter, options.throwOnLimitExceeded ? limit + 1 : limit);\n\n  if (options.throwOnLimitExceeded && parts.length > limit) {\n    throw new RangeError('Parameter limit exceeded. Only ' + limit + ' parameter' + (limit === 1 ? '' : 's') + ' allowed.');\n  }\n\n  var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n\n  var i;\n  var charset = options.charset;\n\n  if (options.charsetSentinel) {\n    for (i = 0; i < parts.length; ++i) {\n      if (parts[i].indexOf('utf8=') === 0) {\n        if (parts[i] === charsetSentinel) {\n          charset = 'utf-8';\n        } else if (parts[i] === isoSentinel) {\n          charset = 'iso-8859-1';\n        }\n\n        skipIndex = i;\n        i = parts.length; // The eslint settings do not allow break;\n      }\n    }\n  }\n\n  for (i = 0; i < parts.length; ++i) {\n    if (i === skipIndex) {\n      continue;\n    }\n\n    var part = parts[i];\n    var bracketEqualsPos = part.indexOf(']=');\n    var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n    var key;\n    var val;\n\n    if (pos === -1) {\n      key = options.decoder(part, defaults.decoder, charset, 'key');\n      val = options.strictNullHandling ? null : '';\n    } else {\n      key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n      val = utils.maybeMap(parseArrayValue(part.slice(pos + 1), options, isArray(obj[key]) ? obj[key].length : 0), function (encodedVal) {\n        return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n      });\n    }\n\n    if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n      val = interpretNumericEntities(String(val));\n    }\n\n    if (part.indexOf('[]=') > -1) {\n      val = isArray(val) ? [val] : val;\n    }\n\n    var existing = has.call(obj, key);\n\n    if (existing && options.duplicates === 'combine') {\n      obj[key] = utils.combine(obj[key], val);\n    } else if (!existing || options.duplicates === 'last') {\n      obj[key] = val;\n    }\n  }\n\n  return obj;\n};\n\nvar parseObject = function parseObject(chain, val, options, valuesParsed) {\n  var currentArrayLength = 0;\n\n  if (chain.length > 0 && chain[chain.length - 1] === '[]') {\n    var parentKey = chain.slice(0, -1).join('');\n    currentArrayLength = Array.isArray(val) && val[parentKey] ? val[parentKey].length : 0;\n  }\n\n  var leaf = valuesParsed ? val : parseArrayValue(val, options, currentArrayLength);\n\n  for (var i = chain.length - 1; i >= 0; --i) {\n    var obj;\n    var root = chain[i];\n\n    if (root === '[]' && options.parseArrays) {\n      obj = options.allowEmptyArrays && (leaf === '' || options.strictNullHandling && leaf === null) ? [] : utils.combine([], leaf);\n    } else {\n      obj = options.plainObjects ? {\n        __proto__: null\n      } : {};\n      var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n      var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, '.') : cleanRoot;\n      var index = parseInt(decodedRoot, 10);\n\n      if (!options.parseArrays && decodedRoot === '') {\n        obj = {\n          0: leaf\n        };\n      } else if (!isNaN(index) && root !== decodedRoot && String(index) === decodedRoot && index >= 0 && options.parseArrays && index <= options.arrayLimit) {\n        obj = [];\n        obj[index] = leaf;\n      } else if (decodedRoot !== '__proto__') {\n        obj[decodedRoot] = leaf;\n      }\n    }\n\n    leaf = obj;\n  }\n\n  return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n  if (!givenKey) {\n    return;\n  } // Transform dot notation to bracket notation\n\n\n  var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey; // The regex chunks\n\n  var brackets = /(\\[[^[\\]]*])/;\n  var child = /(\\[[^[\\]]*])/g; // Get the parent\n\n  var segment = options.depth > 0 && brackets.exec(key);\n  var parent = segment ? key.slice(0, segment.index) : key; // Stash the parent if it exists\n\n  var keys = [];\n\n  if (parent) {\n    // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n    if (!options.plainObjects && has.call(Object.prototype, parent)) {\n      if (!options.allowPrototypes) {\n        return;\n      }\n    }\n\n    keys.push(parent);\n  } // Loop through children appending to the array until we hit depth\n\n\n  var i = 0;\n\n  while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n    i += 1;\n\n    if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n      if (!options.allowPrototypes) {\n        return;\n      }\n    }\n\n    keys.push(segment[1]);\n  } // If there's a remainder, check strictDepth option for throw, else just add whatever is left\n\n\n  if (segment) {\n    if (options.strictDepth === true) {\n      throw new RangeError('Input depth exceeded depth option of ' + options.depth + ' and strictDepth is true');\n    }\n\n    keys.push('[' + key.slice(segment.index) + ']');\n  }\n\n  return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n  if (!opts) {\n    return defaults;\n  }\n\n  if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n    throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n  }\n\n  if (typeof opts.decodeDotInKeys !== 'undefined' && typeof opts.decodeDotInKeys !== 'boolean') {\n    throw new TypeError('`decodeDotInKeys` option can only be `true` or `false`, when provided');\n  }\n\n  if (opts.decoder !== null && typeof opts.decoder !== 'undefined' && typeof opts.decoder !== 'function') {\n    throw new TypeError('Decoder has to be a function.');\n  }\n\n  if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n    throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n  }\n\n  if (typeof opts.throwOnLimitExceeded !== 'undefined' && typeof opts.throwOnLimitExceeded !== 'boolean') {\n    throw new TypeError('`throwOnLimitExceeded` option must be a boolean');\n  }\n\n  var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n  var duplicates = typeof opts.duplicates === 'undefined' ? defaults.duplicates : opts.duplicates;\n\n  if (duplicates !== 'combine' && duplicates !== 'first' && duplicates !== 'last') {\n    throw new TypeError('The duplicates option must be either combine, first, or last');\n  }\n\n  var allowDots = typeof opts.allowDots === 'undefined' ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n  return {\n    allowDots: allowDots,\n    allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n    allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n    allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n    arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n    charset: charset,\n    charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n    comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n    decodeDotInKeys: typeof opts.decodeDotInKeys === 'boolean' ? opts.decodeDotInKeys : defaults.decodeDotInKeys,\n    decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n    delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n    // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n    depth: typeof opts.depth === 'number' || opts.depth === false ? +opts.depth : defaults.depth,\n    duplicates: duplicates,\n    ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n    interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n    parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n    parseArrays: opts.parseArrays !== false,\n    plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n    strictDepth: typeof opts.strictDepth === 'boolean' ? !!opts.strictDepth : defaults.strictDepth,\n    strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n    throwOnLimitExceeded: typeof opts.throwOnLimitExceeded === 'boolean' ? opts.throwOnLimitExceeded : false\n  };\n};\n\nmodule.exports = function (str, opts) {\n  var options = normalizeParseOptions(opts);\n\n  if (str === '' || str === null || typeof str === 'undefined') {\n    return options.plainObjects ? {\n      __proto__: null\n    } : {};\n  }\n\n  var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n  var obj = options.plainObjects ? {\n    __proto__: null\n  } : {}; // Iterate over the keys and setup the new object\n\n  var keys = Object.keys(tempObj);\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n    var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n    obj = utils.merge(obj, newObj, options);\n  }\n\n  if (options.allowSparse === true) {\n    return obj;\n  }\n\n  return utils.compact(obj);\n};","map":{"version":3,"sources":["C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/qs/lib/parse.js"],"names":["utils","require","has","Object","prototype","hasOwnProperty","isArray","Array","defaults","allowDots","allowEmptyArrays","allowPrototypes","allowSparse","arrayLimit","charset","charsetSentinel","comma","decodeDotInKeys","decoder","decode","delimiter","depth","duplicates","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","plainObjects","strictDepth","strictNullHandling","throwOnLimitExceeded","str","replace","$0","numberStr","String","fromCharCode","parseInt","parseArrayValue","val","options","currentArrayLength","indexOf","split","RangeError","isoSentinel","parseValues","parseQueryStringValues","obj","__proto__","cleanStr","limit","Infinity","undefined","parts","length","skipIndex","i","part","bracketEqualsPos","pos","key","slice","maybeMap","encodedVal","existing","call","combine","parseObject","chain","valuesParsed","parentKey","join","leaf","root","cleanRoot","charAt","decodedRoot","index","isNaN","parseKeys","parseQueryStringKeys","givenKey","brackets","child","segment","exec","parent","keys","push","normalizeParseOptions","opts","TypeError","isRegExp","module","exports","tempObj","newObj","merge","compact"],"mappings":"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","sourcesContent":["'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowEmptyArrays: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decodeDotInKeys: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    duplicates: 'combine',\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictDepth: false,\n    strictNullHandling: false,\n    throwOnLimitExceeded: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options, currentArrayLength) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    if (options.throwOnLimitExceeded && currentArrayLength >= options.arrayLimit) {\n        throw new RangeError('Array limit exceeded. Only ' + options.arrayLimit + ' element' + (options.arrayLimit === 1 ? '' : 's') + ' allowed in an array.');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    cleanStr = cleanStr.replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(\n        options.delimiter,\n        options.throwOnLimitExceeded ? limit + 1 : limit\n    );\n\n    if (options.throwOnLimitExceeded && parts.length > limit) {\n        throw new RangeError('Parameter limit exceeded. Only ' + limit + ' parameter' + (limit === 1 ? '' : 's') + ' allowed.');\n    }\n\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key;\n        var val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n\n            val = utils.maybeMap(\n                parseArrayValue(\n                    part.slice(pos + 1),\n                    options,\n                    isArray(obj[key]) ? obj[key].length : 0\n                ),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(String(val));\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        var existing = has.call(obj, key);\n        if (existing && options.duplicates === 'combine') {\n            obj[key] = utils.combine(obj[key], val);\n        } else if (!existing || options.duplicates === 'last') {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var currentArrayLength = 0;\n    if (chain.length > 0 && chain[chain.length - 1] === '[]') {\n        var parentKey = chain.slice(0, -1).join('');\n        currentArrayLength = Array.isArray(val) && val[parentKey] ? val[parentKey].length : 0;\n    }\n\n    var leaf = valuesParsed ? val : parseArrayValue(val, options, currentArrayLength);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = options.allowEmptyArrays && (leaf === '' || (options.strictNullHandling && leaf === null))\n                ? []\n                : utils.combine([], leaf);\n        } else {\n            obj = options.plainObjects ? { __proto__: null } : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, '.') : cleanRoot;\n            var index = parseInt(decodedRoot, 10);\n            if (!options.parseArrays && decodedRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== decodedRoot\n                && String(index) === decodedRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (decodedRoot !== '__proto__') {\n                obj[decodedRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, check strictDepth option for throw, else just add whatever is left\n\n    if (segment) {\n        if (options.strictDepth === true) {\n            throw new RangeError('Input depth exceeded depth option of ' + options.depth + ' and strictDepth is true');\n        }\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.decodeDotInKeys !== 'undefined' && typeof opts.decodeDotInKeys !== 'boolean') {\n        throw new TypeError('`decodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.decoder !== null && typeof opts.decoder !== 'undefined' && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    if (typeof opts.throwOnLimitExceeded !== 'undefined' && typeof opts.throwOnLimitExceeded !== 'boolean') {\n        throw new TypeError('`throwOnLimitExceeded` option must be a boolean');\n    }\n\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    var duplicates = typeof opts.duplicates === 'undefined' ? defaults.duplicates : opts.duplicates;\n\n    if (duplicates !== 'combine' && duplicates !== 'first' && duplicates !== 'last') {\n        throw new TypeError('The duplicates option must be either combine, first, or last');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decodeDotInKeys: typeof opts.decodeDotInKeys === 'boolean' ? opts.decodeDotInKeys : defaults.decodeDotInKeys,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        duplicates: duplicates,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictDepth: typeof opts.strictDepth === 'boolean' ? !!opts.strictDepth : defaults.strictDepth,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n        throwOnLimitExceeded: typeof opts.throwOnLimitExceeded === 'boolean' ? opts.throwOnLimitExceeded : false\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? { __proto__: null } : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? { __proto__: null } : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n"]},"metadata":{},"sourceType":"script"}