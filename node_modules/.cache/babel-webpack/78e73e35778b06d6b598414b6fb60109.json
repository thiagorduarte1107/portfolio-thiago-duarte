{"ast":null,"code":"'use strict';\n\nvar $isNaN = require('./isNaN');\n/** @type {import('./sign')} */\n\n\nmodule.exports = function sign(number) {\n  if ($isNaN(number) || number === 0) {\n    return number;\n  }\n\n  return number < 0 ? -1 : +1;\n};","map":{"version":3,"sources":["C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/math-intrinsics/sign.js"],"names":["$isNaN","require","module","exports","sign","number"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;AAEA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,MAAd,EAAsB;AACtC,MAAIL,MAAM,CAACK,MAAD,CAAN,IAAkBA,MAAM,KAAK,CAAjC,EAAoC;AACnC,WAAOA,MAAP;AACA;;AACD,SAAOA,MAAM,GAAG,CAAT,GAAa,CAAC,CAAd,GAAkB,CAAC,CAA1B;AACA,CALD","sourcesContent":["'use strict';\n\nvar $isNaN = require('./isNaN');\n\n/** @type {import('./sign')} */\nmodule.exports = function sign(number) {\n\tif ($isNaN(number) || number === 0) {\n\t\treturn number;\n\t}\n\treturn number < 0 ? -1 : +1;\n};\n"]},"metadata":{},"sourceType":"script"}