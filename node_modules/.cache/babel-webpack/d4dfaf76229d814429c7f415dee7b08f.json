{"ast":null,"code":"import _possibleConstructorReturn from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _isNativeReflectConstruct from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport _getPrototypeOf from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nexport function bufferToggle(openings, closingSelector) {\n  return function bufferToggleOperatorFunction(source) {\n    return source.lift(new BufferToggleOperator(openings, closingSelector));\n  };\n}\n\nvar BufferToggleOperator = /*#__PURE__*/function () {\n  function BufferToggleOperator(openings, closingSelector) {\n    _classCallCheck(this, BufferToggleOperator);\n\n    this.openings = openings;\n    this.closingSelector = closingSelector;\n  }\n\n  return _createClass(BufferToggleOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    }\n  }]);\n}();\n\nvar BufferToggleSubscriber = /*#__PURE__*/function (_OuterSubscriber) {\n  function BufferToggleSubscriber(destination, openings, closingSelector) {\n    var _this;\n\n    _classCallCheck(this, BufferToggleSubscriber);\n\n    _this = _callSuper(this, BufferToggleSubscriber, [destination]);\n    _this.closingSelector = closingSelector;\n    _this.contexts = [];\n\n    _this.add(subscribeToResult(_this, openings));\n\n    return _this;\n  }\n\n  _inherits(BufferToggleSubscriber, _OuterSubscriber);\n\n  return _createClass(BufferToggleSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var contexts = this.contexts;\n      var len = contexts.length;\n\n      for (var i = 0; i < len; i++) {\n        contexts[i].buffer.push(value);\n      }\n    }\n  }, {\n    key: \"_error\",\n    value: function _error(err) {\n      var contexts = this.contexts;\n\n      while (contexts.length > 0) {\n        var context = contexts.shift();\n        context.subscription.unsubscribe();\n        context.buffer = null;\n        context.subscription = null;\n      }\n\n      this.contexts = null;\n\n      _superPropGet(BufferToggleSubscriber, \"_error\", this, 3)([err]);\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var contexts = this.contexts;\n\n      while (contexts.length > 0) {\n        var context = contexts.shift();\n        this.destination.next(context.buffer);\n        context.subscription.unsubscribe();\n        context.buffer = null;\n        context.subscription = null;\n      }\n\n      this.contexts = null;\n\n      _superPropGet(BufferToggleSubscriber, \"_complete\", this, 3)([]);\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext(outerValue, innerValue) {\n      outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete(innerSub) {\n      this.closeBuffer(innerSub.context);\n    }\n  }, {\n    key: \"openBuffer\",\n    value: function openBuffer(value) {\n      try {\n        var closingSelector = this.closingSelector;\n        var closingNotifier = closingSelector.call(this, value);\n\n        if (closingNotifier) {\n          this.trySubscribe(closingNotifier);\n        }\n      } catch (err) {\n        this._error(err);\n      }\n    }\n  }, {\n    key: \"closeBuffer\",\n    value: function closeBuffer(context) {\n      var contexts = this.contexts;\n\n      if (contexts && context) {\n        var buffer = context.buffer,\n            subscription = context.subscription;\n        this.destination.next(buffer);\n        contexts.splice(contexts.indexOf(context), 1);\n        this.remove(subscription);\n        subscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"trySubscribe\",\n    value: function trySubscribe(closingNotifier) {\n      var contexts = this.contexts;\n      var buffer = [];\n      var subscription = new Subscription();\n      var context = {\n        buffer: buffer,\n        subscription: subscription\n      };\n      contexts.push(context);\n      var innerSubscription = subscribeToResult(this, closingNotifier, context);\n\n      if (!innerSubscription || innerSubscription.closed) {\n        this.closeBuffer(context);\n      } else {\n        innerSubscription.context = context;\n        this.add(innerSubscription);\n        subscription.add(innerSubscription);\n      }\n    }\n  }]);\n}(OuterSubscriber); //# sourceMappingURL=bufferToggle.js.map","map":{"version":3,"sources":["C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/rxjs/_esm2015/internal/operators/bufferToggle.js"],"names":["Subscription","subscribeToResult","OuterSubscriber","bufferToggle","openings","closingSelector","bufferToggleOperatorFunction","source","lift","BufferToggleOperator","call","subscriber","subscribe","BufferToggleSubscriber","destination","contexts","add","_next","value","len","length","i","buffer","push","_error","err","context","shift","subscription","unsubscribe","_complete","next","notifyNext","outerValue","innerValue","closeBuffer","openBuffer","notifyComplete","innerSub","closingNotifier","trySubscribe","splice","indexOf","remove","innerSubscription","closed"],"mappings":"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","sourcesContent":["import { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nexport function bufferToggle(openings, closingSelector) {\n    return function bufferToggleOperatorFunction(source) {\n        return source.lift(new BufferToggleOperator(openings, closingSelector));\n    };\n}\nclass BufferToggleOperator {\n    constructor(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    }\n}\nclass BufferToggleSubscriber extends OuterSubscriber {\n    constructor(destination, openings, closingSelector) {\n        super(destination);\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(subscribeToResult(this, openings));\n    }\n    _next(value) {\n        const contexts = this.contexts;\n        const len = contexts.length;\n        for (let i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    }\n    _error(err) {\n        const contexts = this.contexts;\n        while (contexts.length > 0) {\n            const context = contexts.shift();\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        super._error(err);\n    }\n    _complete() {\n        const contexts = this.contexts;\n        while (contexts.length > 0) {\n            const context = contexts.shift();\n            this.destination.next(context.buffer);\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        super._complete();\n    }\n    notifyNext(outerValue, innerValue) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    }\n    notifyComplete(innerSub) {\n        this.closeBuffer(innerSub.context);\n    }\n    openBuffer(value) {\n        try {\n            const closingSelector = this.closingSelector;\n            const closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    }\n    closeBuffer(context) {\n        const contexts = this.contexts;\n        if (contexts && context) {\n            const { buffer, subscription } = context;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    }\n    trySubscribe(closingNotifier) {\n        const contexts = this.contexts;\n        const buffer = [];\n        const subscription = new Subscription();\n        const context = { buffer, subscription };\n        contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    }\n}\n//# sourceMappingURL=bufferToggle.js.map"]},"metadata":{},"sourceType":"module"}