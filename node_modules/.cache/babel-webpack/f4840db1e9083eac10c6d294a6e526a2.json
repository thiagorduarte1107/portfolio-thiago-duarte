{"ast":null,"code":"import _possibleConstructorReturn from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _isNativeReflectConstruct from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport _getPrototypeOf from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\nimport { Subscriber } from '../Subscriber';\nexport function sequenceEqual(compareTo, comparator) {\n  return function (source) {\n    return source.lift(new SequenceEqualOperator(compareTo, comparator));\n  };\n}\nexport var SequenceEqualOperator = /*#__PURE__*/function () {\n  function SequenceEqualOperator(compareTo, comparator) {\n    _classCallCheck(this, SequenceEqualOperator);\n\n    this.compareTo = compareTo;\n    this.comparator = comparator;\n  }\n\n  return _createClass(SequenceEqualOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\n    }\n  }]);\n}();\nexport var SequenceEqualSubscriber = /*#__PURE__*/function (_Subscriber) {\n  function SequenceEqualSubscriber(destination, compareTo, comparator) {\n    var _this;\n\n    _classCallCheck(this, SequenceEqualSubscriber);\n\n    _this = _callSuper(this, SequenceEqualSubscriber, [destination]);\n    _this.compareTo = compareTo;\n    _this.comparator = comparator;\n    _this._a = [];\n    _this._b = [];\n    _this._oneComplete = false;\n\n    _this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));\n\n    return _this;\n  }\n\n  _inherits(SequenceEqualSubscriber, _Subscriber);\n\n  return _createClass(SequenceEqualSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      if (this._oneComplete && this._b.length === 0) {\n        this.emit(false);\n      } else {\n        this._a.push(value);\n\n        this.checkValues();\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      if (this._oneComplete) {\n        this.emit(this._a.length === 0 && this._b.length === 0);\n      } else {\n        this._oneComplete = true;\n      }\n\n      this.unsubscribe();\n    }\n  }, {\n    key: \"checkValues\",\n    value: function checkValues() {\n      var _a = this._a,\n          _b = this._b,\n          comparator = this.comparator;\n\n      while (_a.length > 0 && _b.length > 0) {\n        var a = _a.shift();\n\n        var b = _b.shift();\n\n        var areEqual = false;\n\n        try {\n          areEqual = comparator ? comparator(a, b) : a === b;\n        } catch (e) {\n          this.destination.error(e);\n        }\n\n        if (!areEqual) {\n          this.emit(false);\n        }\n      }\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(value) {\n      var destination = this.destination;\n      destination.next(value);\n      destination.complete();\n    }\n  }, {\n    key: \"nextB\",\n    value: function nextB(value) {\n      if (this._oneComplete && this._a.length === 0) {\n        this.emit(false);\n      } else {\n        this._b.push(value);\n\n        this.checkValues();\n      }\n    }\n  }, {\n    key: \"completeB\",\n    value: function completeB() {\n      if (this._oneComplete) {\n        this.emit(this._a.length === 0 && this._b.length === 0);\n      } else {\n        this._oneComplete = true;\n      }\n    }\n  }]);\n}(Subscriber);\n\nvar SequenceEqualCompareToSubscriber = /*#__PURE__*/function (_Subscriber2) {\n  function SequenceEqualCompareToSubscriber(destination, parent) {\n    var _this2;\n\n    _classCallCheck(this, SequenceEqualCompareToSubscriber);\n\n    _this2 = _callSuper(this, SequenceEqualCompareToSubscriber, [destination]);\n    _this2.parent = parent;\n    return _this2;\n  }\n\n  _inherits(SequenceEqualCompareToSubscriber, _Subscriber2);\n\n  return _createClass(SequenceEqualCompareToSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      this.parent.nextB(value);\n    }\n  }, {\n    key: \"_error\",\n    value: function _error(err) {\n      this.parent.error(err);\n      this.unsubscribe();\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.parent.completeB();\n      this.unsubscribe();\n    }\n  }]);\n}(Subscriber); //# sourceMappingURL=sequenceEqual.js.map","map":{"version":3,"sources":["C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/rxjs/_esm2015/internal/operators/sequenceEqual.js"],"names":["Subscriber","sequenceEqual","compareTo","comparator","source","lift","SequenceEqualOperator","call","subscriber","subscribe","SequenceEqualSubscriber","destination","_a","_b","_oneComplete","add","SequenceEqualCompareToSubscriber","_next","value","length","emit","push","checkValues","_complete","unsubscribe","a","shift","b","areEqual","e","error","next","complete","nextB","completeB","parent","_error","err"],"mappings":"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","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function sequenceEqual(compareTo, comparator) {\n    return (source) => source.lift(new SequenceEqualOperator(compareTo, comparator));\n}\nexport class SequenceEqualOperator {\n    constructor(compareTo, comparator) {\n        this.compareTo = compareTo;\n        this.comparator = comparator;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\n    }\n}\nexport class SequenceEqualSubscriber extends Subscriber {\n    constructor(destination, compareTo, comparator) {\n        super(destination);\n        this.compareTo = compareTo;\n        this.comparator = comparator;\n        this._a = [];\n        this._b = [];\n        this._oneComplete = false;\n        this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n    }\n    _next(value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    }\n    _complete() {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n        this.unsubscribe();\n    }\n    checkValues() {\n        const { _a, _b, comparator } = this;\n        while (_a.length > 0 && _b.length > 0) {\n            let a = _a.shift();\n            let b = _b.shift();\n            let areEqual = false;\n            try {\n                areEqual = comparator ? comparator(a, b) : a === b;\n            }\n            catch (e) {\n                this.destination.error(e);\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    }\n    emit(value) {\n        const { destination } = this;\n        destination.next(value);\n        destination.complete();\n    }\n    nextB(value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    }\n    completeB() {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    }\n}\nclass SequenceEqualCompareToSubscriber extends Subscriber {\n    constructor(destination, parent) {\n        super(destination);\n        this.parent = parent;\n    }\n    _next(value) {\n        this.parent.nextB(value);\n    }\n    _error(err) {\n        this.parent.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.parent.completeB();\n        this.unsubscribe();\n    }\n}\n//# sourceMappingURL=sequenceEqual.js.map"]},"metadata":{},"sourceType":"module"}