{"ast":null,"code":"import _possibleConstructorReturn from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _isNativeReflectConstruct from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport _getPrototypeOf from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\nimport { Subscriber } from '../Subscriber';\nexport function scan(accumulator, seed) {\n  var hasSeed = false;\n\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source) {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nvar ScanOperator = /*#__PURE__*/function () {\n  function ScanOperator(accumulator, seed) {\n    var hasSeed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    _classCallCheck(this, ScanOperator);\n\n    this.accumulator = accumulator;\n    this.seed = seed;\n    this.hasSeed = hasSeed;\n  }\n\n  return _createClass(ScanOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    }\n  }]);\n}();\n\nvar ScanSubscriber = /*#__PURE__*/function (_Subscriber) {\n  function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n    var _this;\n\n    _classCallCheck(this, ScanSubscriber);\n\n    _this = _callSuper(this, ScanSubscriber, [destination]);\n    _this.accumulator = accumulator;\n    _this._seed = _seed;\n    _this.hasSeed = hasSeed;\n    _this.index = 0;\n    return _this;\n  }\n\n  _inherits(ScanSubscriber, _Subscriber);\n\n  return _createClass(ScanSubscriber, [{\n    key: \"seed\",\n    get: function get() {\n      return this._seed;\n    },\n    set: function set(value) {\n      this.hasSeed = true;\n      this._seed = value;\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      if (!this.hasSeed) {\n        this.seed = value;\n        this.destination.next(value);\n      } else {\n        return this._tryNext(value);\n      }\n    }\n  }, {\n    key: \"_tryNext\",\n    value: function _tryNext(value) {\n      var index = this.index++;\n      var result;\n\n      try {\n        result = this.accumulator(this.seed, value, index);\n      } catch (err) {\n        this.destination.error(err);\n      }\n\n      this.seed = result;\n      this.destination.next(result);\n    }\n  }]);\n}(Subscriber); //# sourceMappingURL=scan.js.map","map":{"version":3,"sources":["C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/rxjs/_esm2015/internal/operators/scan.js"],"names":["Subscriber","scan","accumulator","seed","hasSeed","arguments","length","scanOperatorFunction","source","lift","ScanOperator","call","subscriber","subscribe","ScanSubscriber","destination","_seed","index","value","_next","next","_tryNext","result","err","error"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAO,SAASC,IAAT,CAAcC,WAAd,EAA2BC,IAA3B,EAAiC;AACpC,MAAIC,OAAO,GAAG,KAAd;;AACA,MAAIC,SAAS,CAACC,MAAV,IAAoB,CAAxB,EAA2B;AACvBF,IAAAA,OAAO,GAAG,IAAV;AACH;;AACD,SAAO,SAASG,oBAAT,CAA8BC,MAA9B,EAAsC;AACzC,WAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,YAAJ,CAAiBR,WAAjB,EAA8BC,IAA9B,EAAoCC,OAApC,CAAZ,CAAP;AACH,GAFD;AAGH;;IACKM,Y;AACF,wBAAYR,WAAZ,EAAyBC,IAAzB,EAAgD;AAAA,QAAjBC,OAAiB,uEAAP,KAAO;;AAAA;;AAC5C,SAAKF,WAAL,GAAmBA,WAAnB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeA,OAAf;AACH;;;;WACD,SAAAO,IAAI,CAACC,UAAD,EAAaJ,MAAb,EAAqB;AACrB,aAAOA,MAAM,CAACK,SAAP,CAAiB,IAAIC,cAAJ,CAAmBF,UAAnB,EAA+B,KAAKV,WAApC,EAAiD,KAAKC,IAAtD,EAA4D,KAAKC,OAAjE,CAAjB,CAAP;AACH;;;;IAECU,c;AACF,0BAAYC,WAAZ,EAAyBb,WAAzB,EAAsCc,KAAtC,EAA6CZ,OAA7C,EAAsD;AAAA;;AAAA;;AAClD,8CAAMW,WAAN;AACA,UAAKb,WAAL,GAAmBA,WAAnB;AACA,UAAKc,KAAL,GAAaA,KAAb;AACA,UAAKZ,OAAL,GAAeA,OAAf;AACA,UAAKa,KAAL,GAAa,CAAb;AALkD;AAMrD;;;;;;SACD,eAAW;AACP,aAAO,KAAKD,KAAZ;AACH,K;SACD,aAASE,KAAT,EAAgB;AACZ,WAAKd,OAAL,GAAe,IAAf;AACA,WAAKY,KAAL,GAAaE,KAAb;AACH;;;WACD,SAAAC,KAAK,CAACD,KAAD,EAAQ;AACT,UAAI,CAAC,KAAKd,OAAV,EAAmB;AACf,aAAKD,IAAL,GAAYe,KAAZ;AACA,aAAKH,WAAL,CAAiBK,IAAjB,CAAsBF,KAAtB;AACH,OAHD,MAIK;AACD,eAAO,KAAKG,QAAL,CAAcH,KAAd,CAAP;AACH;AACJ;;;WACD,SAAAG,QAAQ,CAACH,KAAD,EAAQ;AACZ,UAAMD,KAAK,GAAG,KAAKA,KAAL,EAAd;AACA,UAAIK,MAAJ;;AACA,UAAI;AACAA,QAAAA,MAAM,GAAG,KAAKpB,WAAL,CAAiB,KAAKC,IAAtB,EAA4Be,KAA5B,EAAmCD,KAAnC,CAAT;AACH,OAFD,CAGA,OAAOM,GAAP,EAAY;AACR,aAAKR,WAAL,CAAiBS,KAAjB,CAAuBD,GAAvB;AACH;;AACD,WAAKpB,IAAL,GAAYmB,MAAZ;AACA,WAAKP,WAAL,CAAiBK,IAAjB,CAAsBE,MAAtB;AACH;;EAnCwBtB,U,GAqC7B","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function scan(accumulator, seed) {\n    let hasSeed = false;\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nclass ScanOperator {\n    constructor(accumulator, seed, hasSeed = false) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    }\n}\nclass ScanSubscriber extends Subscriber {\n    constructor(destination, accumulator, _seed, hasSeed) {\n        super(destination);\n        this.accumulator = accumulator;\n        this._seed = _seed;\n        this.hasSeed = hasSeed;\n        this.index = 0;\n    }\n    get seed() {\n        return this._seed;\n    }\n    set seed(value) {\n        this.hasSeed = true;\n        this._seed = value;\n    }\n    _next(value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    }\n    _tryNext(value) {\n        const index = this.index++;\n        let result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=scan.js.map"]},"metadata":{},"sourceType":"module"}