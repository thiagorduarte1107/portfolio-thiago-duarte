{"ast":null,"code":"import _possibleConstructorReturn from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _isNativeReflectConstruct from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport _getPrototypeOf from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\nimport { Subscriber } from '../Subscriber';\nexport function refCount() {\n  return function refCountOperatorFunction(source) {\n    return source.lift(new RefCountOperator(source));\n  };\n}\n\nvar RefCountOperator = /*#__PURE__*/function () {\n  function RefCountOperator(connectable) {\n    _classCallCheck(this, RefCountOperator);\n\n    this.connectable = connectable;\n  }\n\n  return _createClass(RefCountOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      var connectable = this.connectable;\n      connectable._refCount++;\n      var refCounter = new RefCountSubscriber(subscriber, connectable);\n      var subscription = source.subscribe(refCounter);\n\n      if (!refCounter.closed) {\n        refCounter.connection = connectable.connect();\n      }\n\n      return subscription;\n    }\n  }]);\n}();\n\nvar RefCountSubscriber = /*#__PURE__*/function (_Subscriber) {\n  function RefCountSubscriber(destination, connectable) {\n    var _this;\n\n    _classCallCheck(this, RefCountSubscriber);\n\n    _this = _callSuper(this, RefCountSubscriber, [destination]);\n    _this.connectable = connectable;\n    return _this;\n  }\n\n  _inherits(RefCountSubscriber, _Subscriber);\n\n  return _createClass(RefCountSubscriber, [{\n    key: \"_unsubscribe\",\n    value: function _unsubscribe() {\n      var connectable = this.connectable;\n\n      if (!connectable) {\n        this.connection = null;\n        return;\n      }\n\n      this.connectable = null;\n      var refCount = connectable._refCount;\n\n      if (refCount <= 0) {\n        this.connection = null;\n        return;\n      }\n\n      connectable._refCount = refCount - 1;\n\n      if (refCount > 1) {\n        this.connection = null;\n        return;\n      }\n\n      var connection = this.connection;\n      var sharedConnection = connectable._connection;\n      this.connection = null;\n\n      if (sharedConnection && (!connection || sharedConnection === connection)) {\n        sharedConnection.unsubscribe();\n      }\n    }\n  }]);\n}(Subscriber); //# sourceMappingURL=refCount.js.map","map":{"version":3,"sources":["C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/rxjs/_esm2015/internal/operators/refCount.js"],"names":["Subscriber","refCount","refCountOperatorFunction","source","lift","RefCountOperator","connectable","call","subscriber","_refCount","refCounter","RefCountSubscriber","subscription","subscribe","closed","connection","connect","destination","_unsubscribe","sharedConnection","_connection","unsubscribe"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAO,SAASC,QAAT,GAAoB;AACvB,SAAO,SAASC,wBAAT,CAAkCC,MAAlC,EAA0C;AAC7C,WAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,gBAAJ,CAAqBF,MAArB,CAAZ,CAAP;AACH,GAFD;AAGH;;IACKE,gB;AACF,4BAAYC,WAAZ,EAAyB;AAAA;;AACrB,SAAKA,WAAL,GAAmBA,WAAnB;AACH;;;;WACD,SAAAC,IAAI,CAACC,UAAD,EAAaL,MAAb,EAAqB;AACrB,UAAQG,WAAR,GAAwB,IAAxB,CAAQA,WAAR;AACAA,MAAAA,WAAW,CAACG,SAAZ;AACA,UAAMC,UAAU,GAAG,IAAIC,kBAAJ,CAAuBH,UAAvB,EAAmCF,WAAnC,CAAnB;AACA,UAAMM,YAAY,GAAGT,MAAM,CAACU,SAAP,CAAiBH,UAAjB,CAArB;;AACA,UAAI,CAACA,UAAU,CAACI,MAAhB,EAAwB;AACpBJ,QAAAA,UAAU,CAACK,UAAX,GAAwBT,WAAW,CAACU,OAAZ,EAAxB;AACH;;AACD,aAAOJ,YAAP;AACH;;;;IAECD,kB;AACF,8BAAYM,WAAZ,EAAyBX,WAAzB,EAAsC;AAAA;;AAAA;;AAClC,kDAAMW,WAAN;AACA,UAAKX,WAAL,GAAmBA,WAAnB;AAFkC;AAGrC;;;;;;WACD,SAAAY,YAAY,GAAG;AACX,UAAQZ,WAAR,GAAwB,IAAxB,CAAQA,WAAR;;AACA,UAAI,CAACA,WAAL,EAAkB;AACd,aAAKS,UAAL,GAAkB,IAAlB;AACA;AACH;;AACD,WAAKT,WAAL,GAAmB,IAAnB;AACA,UAAML,QAAQ,GAAGK,WAAW,CAACG,SAA7B;;AACA,UAAIR,QAAQ,IAAI,CAAhB,EAAmB;AACf,aAAKc,UAAL,GAAkB,IAAlB;AACA;AACH;;AACDT,MAAAA,WAAW,CAACG,SAAZ,GAAwBR,QAAQ,GAAG,CAAnC;;AACA,UAAIA,QAAQ,GAAG,CAAf,EAAkB;AACd,aAAKc,UAAL,GAAkB,IAAlB;AACA;AACH;;AACD,UAAQA,UAAR,GAAuB,IAAvB,CAAQA,UAAR;AACA,UAAMI,gBAAgB,GAAGb,WAAW,CAACc,WAArC;AACA,WAAKL,UAAL,GAAkB,IAAlB;;AACA,UAAII,gBAAgB,KAAK,CAACJ,UAAD,IAAeI,gBAAgB,KAAKJ,UAAzC,CAApB,EAA0E;AACtEI,QAAAA,gBAAgB,CAACE,WAAjB;AACH;AACJ;;EA5B4BrB,U,GA8BjC","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nclass RefCountOperator {\n    constructor(connectable) {\n        this.connectable = connectable;\n    }\n    call(subscriber, source) {\n        const { connectable } = this;\n        connectable._refCount++;\n        const refCounter = new RefCountSubscriber(subscriber, connectable);\n        const subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    }\n}\nclass RefCountSubscriber extends Subscriber {\n    constructor(destination, connectable) {\n        super(destination);\n        this.connectable = connectable;\n    }\n    _unsubscribe() {\n        const { connectable } = this;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        const refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        const { connection } = this;\n        const sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    }\n}\n//# sourceMappingURL=refCount.js.map"]},"metadata":{},"sourceType":"module"}