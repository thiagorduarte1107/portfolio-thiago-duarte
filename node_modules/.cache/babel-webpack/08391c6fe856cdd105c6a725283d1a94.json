{"ast":null,"code":"import _possibleConstructorReturn from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _isNativeReflectConstruct from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport _getPrototypeOf from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function exhaustMap(project, resultSelector) {\n  if (resultSelector) {\n    return function (source) {\n      return source.pipe(exhaustMap(function (a, i) {\n        return from(project(a, i)).pipe(map(function (b, ii) {\n          return resultSelector(a, b, i, ii);\n        }));\n      }));\n    };\n  }\n\n  return function (source) {\n    return source.lift(new ExhaustMapOperator(project));\n  };\n}\n\nvar ExhaustMapOperator = /*#__PURE__*/function () {\n  function ExhaustMapOperator(project) {\n    _classCallCheck(this, ExhaustMapOperator);\n\n    this.project = project;\n  }\n\n  return _createClass(ExhaustMapOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n    }\n  }]);\n}();\n\nvar ExhaustMapSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  function ExhaustMapSubscriber(destination, project) {\n    var _this;\n\n    _classCallCheck(this, ExhaustMapSubscriber);\n\n    _this = _callSuper(this, ExhaustMapSubscriber, [destination]);\n    _this.project = project;\n    _this.hasSubscription = false;\n    _this.hasCompleted = false;\n    _this.index = 0;\n    return _this;\n  }\n\n  _inherits(ExhaustMapSubscriber, _SimpleOuterSubscribe);\n\n  return _createClass(ExhaustMapSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      if (!this.hasSubscription) {\n        this.tryNext(value);\n      }\n    }\n  }, {\n    key: \"tryNext\",\n    value: function tryNext(value) {\n      var result;\n      var index = this.index++;\n\n      try {\n        result = this.project(value, index);\n      } catch (err) {\n        this.destination.error(err);\n        return;\n      }\n\n      this.hasSubscription = true;\n\n      this._innerSub(result);\n    }\n  }, {\n    key: \"_innerSub\",\n    value: function _innerSub(result) {\n      var innerSubscriber = new SimpleInnerSubscriber(this);\n      var destination = this.destination;\n      destination.add(innerSubscriber);\n      var innerSubscription = innerSubscribe(result, innerSubscriber);\n\n      if (innerSubscription !== innerSubscriber) {\n        destination.add(innerSubscription);\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.hasCompleted = true;\n\n      if (!this.hasSubscription) {\n        this.destination.complete();\n      }\n\n      this.unsubscribe();\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext(innerValue) {\n      this.destination.next(innerValue);\n    }\n  }, {\n    key: \"notifyError\",\n    value: function notifyError(err) {\n      this.destination.error(err);\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      this.hasSubscription = false;\n\n      if (this.hasCompleted) {\n        this.destination.complete();\n      }\n    }\n  }]);\n}(SimpleOuterSubscriber); //# sourceMappingURL=exhaustMap.js.map","map":{"version":3,"sources":["C:/Users/Thiago-510/CascadeProjects/portfolio-thiago-duarte/node_modules/rxjs/_esm2015/internal/operators/exhaustMap.js"],"names":["map","from","SimpleOuterSubscriber","SimpleInnerSubscriber","innerSubscribe","exhaustMap","project","resultSelector","source","pipe","a","i","b","ii","lift","ExhaustMapOperator","call","subscriber","subscribe","ExhaustMapSubscriber","destination","hasSubscription","hasCompleted","index","_next","value","tryNext","result","err","error","_innerSub","innerSubscriber","add","innerSubscription","_complete","complete","unsubscribe","notifyNext","innerValue","next","notifyError","notifyComplete"],"mappings":"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","sourcesContent":["import { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function exhaustMap(project, resultSelector) {\n    if (resultSelector) {\n        return (source) => source.pipe(exhaustMap((a, i) => from(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii)))));\n    }\n    return (source) => source.lift(new ExhaustMapOperator(project));\n}\nclass ExhaustMapOperator {\n    constructor(project) {\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n    }\n}\nclass ExhaustMapSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, project) {\n        super(destination);\n        this.project = project;\n        this.hasSubscription = false;\n        this.hasCompleted = false;\n        this.index = 0;\n    }\n    _next(value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    }\n    tryNext(value) {\n        let result;\n        const index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.hasSubscription = true;\n        this._innerSub(result);\n    }\n    _innerSub(result) {\n        const innerSubscriber = new SimpleInnerSubscriber(this);\n        const destination = this.destination;\n        destination.add(innerSubscriber);\n        const innerSubscription = innerSubscribe(result, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            destination.add(innerSubscription);\n        }\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    }\n    notifyNext(innerValue) {\n        this.destination.next(innerValue);\n    }\n    notifyError(err) {\n        this.destination.error(err);\n    }\n    notifyComplete() {\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=exhaustMap.js.map"]},"metadata":{},"sourceType":"module"}